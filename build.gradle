plugins {
    id 'java'
    id 'maven-publish'
    id 'fabric-loom'
}

archivesBaseName = project.archives_base_name
version = "${rootProject.mod_version}+MC${rootProject.minecraft_version}"
group = project.maven_group

allprojects { current ->
    apply plugin: 'java'
    apply plugin: 'fabric-loom'

    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
    
    repositories {
        maven {
            name = "Ladysnake Libs"
            url = "https://ladysnake.jfrog.io/artifactory/mods"
            content {
                includeGroup 'io.github.onyxstudios.Cardinal-Components-API'
            }
        }   
        maven {
            name 'Jared' 
            url 'https://maven.blamejared.com' 
            content {
                includeGroup 'vazkii.patchouli'
            }
        }
    }
    
    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        // Allow Inscribe to use independent mappings
        if (current.name != 'Inscribe')
            mappings "net.fabricmc:yarn:${project.yarn_mappings}"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
        modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"
        modImplementation "vazkii.patchouli:Patchouli:$patchouli_version"
    }

    configurations.all {
        resolutionStrategy {
           force 'com.google.guava:guava:21.0'
           force "net.fabricmc:fabric-loader:${project.loader_version}"
           force "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
           force "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"
        }
    }
}

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup 'dev.emi'
        }
    }
    maven {
        name 'JitPack'
        url 'https://jitpack.io'
        content {
            includeGroup 'com.github.Daomephsta'
        }
    }
}

dependencies {
    implementation project('polar-api')
    modImplementation("dev.emi:trinkets:${project.trinkets_version}")
    // Only include implementation detail dependencies to reduce JAR size
    include(project('Inscribe'))
    include(modImplementation("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_components_version}"))
    include(modImplementation("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cardinal_components_version}"))
    include(modImplementation("me.zeroeightsix:fiber:${project.fiber_version}"))
    include(modRuntime('com.github.Daomephsta:modifier-tooltip-fix:v1.0.2'))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from 'LICENSE'
    from project('polar-api').sourceSets.main.output
    from 'CREDITS.md'
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}